#include <stdio.h>
#include <ctype.h>
#include <assert.h>
#include <string.h>
#include <stdlib.h>

#define MAXN 1024
#define MAXL 32

char name[MAXN][MAXL];
int diff[MAXN];
int rel[MAXN];
int order[MAXN];

int compare(const void *arg1, const void *arg2)
{
	int *a = (int*)arg1, *b = (int*)arg2;
	int aa = *a, bb = *b;
	if (diff[aa] == diff[bb]) {
		if (rel[aa] == rel[bb]) {
			return (aa < bb) ? -1 : 1;
		}
		else {
			return (rel[aa] > rel[bb]) ? -1 : 1;
		}
	}
	else {
		return (diff[aa] < diff[bb]) ? -1 : 1;
	}
}

void run()
{
	int n, i, j, len;
	scanf("%d", &n);
	assert(10 <= n && n <= 1000);
	for (i = 0; i < n; ++i) {
		scanf("%s %d %d", name[i], diff + i, rel + i);
		len = strlen(name[i]);
		assert(len <= 20);
		for (j = 0; j < len; ++j) assert(isalnum(name[i][j]));
		assert(1 <= diff[i] && diff[i] <= 10);
		assert(0 <= rel[i] && rel[i] <= 100);
		if (diff[i] <= 3) diff[i] = 2;
		else if (diff[i] <= 7) diff[i] = 0;
		else diff[i] = 1;
		order[i] = i;
	}
	qsort(order, n, sizeof(int), compare);
	for (i = 0; i < 10; ++i) {
		puts(name[order[i]]);
	}
}

int main()
{
	int t;
	scanf("%d", &t);
	assert(1 <= t && t <= 100);
	while (t--) {
		run();
		if (t) puts("");
	}
	return 0;
}

