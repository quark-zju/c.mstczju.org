#include <string.h>
#include <stdio.h>
struct mstc{
	char name[21];
	int  go;
}mstcer[21];

void swap(struct mstc* a, struct mstc* b)
{
	char tn[21];
	int tg;
	strncpy(tn, a->name, strlen(a->name));
	int tmp = strlen(a->name);
	tn[strlen(a->name)] = 0;
	strncpy(a->name, b->name, strlen(b->name));
	a->name[strlen(b->name)] = 0;
	strncpy(b->name, tn, tmp);
	b->name[tmp] = 0;
	tg = a->go;
	a->go = b->go;
	b->go = tg;
}

int main()
{
	int n, nmstcer, ngip, ncome;
	int i = 1;
	int j, k, l;
	char tmp[21];
	scanf("%d", &n);

	for(; i <= n; i++)
	{
		j = 0;
		scanf("%d", &nmstcer);
                memset(mstcer, 0, sizeof(mstcer));
		for(; j < nmstcer; j++)
		{
			mstcer[j].go = 0;
			scanf("%s", mstcer[j].name);
		}
		scanf("%d", &ngip);
		memset(tmp, 0, sizeof(tmp));
		for(j = 0; j < ngip; j++)
		{
			scanf("%d", &ncome);
			for(l = 0; l < ncome; l++)
			{
				scanf("%s", tmp);
				for(k = 0; k < nmstcer; k++)
				{
					if(strlen(tmp) != strlen(mstcer[k].name))
						continue;
					if(strncmp(mstcer[k].name, tmp, strlen(tmp)) == 0)
					{
						mstcer[k].go++;
						break;
					}
				}
			}
		}


		for(j = 0; j < nmstcer; j++)
		{
			for(k = j; k < nmstcer; k++)
			{
				if(mstcer[k].go > mstcer[j].go)
					swap(&mstcer[k], &mstcer[j]);
			}
		}
		for(j = 0; j < nmstcer; j++)
		{
			for(k = j; k < nmstcer; k++)
			{
				if(mstcer[k].go == mstcer[j].go)
				{
					if(strcmp(mstcer[k].name, mstcer[j].name) < 0)
						swap(&mstcer[k], &mstcer[j]);
				}
			}
		}
		printf("Case #%d:\n", i);
		for(j = 0; j < nmstcer; j++)
		{
			printf("%d %s\n", mstcer[j].go, mstcer[j].name);
		}
	}

	return 0;
}
